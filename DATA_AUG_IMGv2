
from imgaug import augmenters as iaa
import numpy as np
import cv2
import os
iname = []

def load_images_from_folder(folder):
    images = []
    global iname
    for root, dirs,fname in os.walk(folder):

        for j in fname:
            if 'jpg' in j:
                img = cv2.imread(os.path.join(root, j))
                images.append(img)
                iname.append(j)
    return images

def write_images(images, iname, name,wpath):
    for i in range(0,len(images)):
        cv2.imwrite(wpath + "%d_%s"%(name,iname[i]), images[i])

def augmentations1(images):
    seq1 = iaa.Sequential([iaa.AverageBlur(k=(2.7)),iaa.MedianBlur(k=(3,11))])
    seq2 = iaa.AddToHueAndSaturation(15)
    seq3 = iaa.Dropout((0.05,0.1), per_channel=0.5)
    seq4 = iaa.Sequential([iaa.Add((-15,15)),iaa.Multiply((0.3,1.5))])
    seq5 = iaa.AddToHueAndSaturation(-15)

    img1 = seq1.augment_images(images)
    img2 = seq2.augment_images(images)
    img3 = seq3.augment_images(images)
    img4 = seq4.augment_images(images)
    img5 = seq5.augment_images(images)

    list = [img1,img3,img4,img2,img5]
    return list

def rotate(images):
    seq1 = iaa.Sequential([iaa.Rot90(1, False)])
    seq2 = iaa.Sequential([iaa.Rot90(2, False)])
    seq3 = iaa.Sequential([iaa.Rot90(3, False)])

    img1 = seq1.augment_images(images)
    img2 = seq2.augment_images(images)
    img3 = seq3.augment_images(images)
    return [img1,img2,img3]

def augResize(images):
    seq1 = iaa.Affine(scale=(0.5,0.5))
    seq2 = iaa.Affine(scale=(1.5,1.5))

    img1 = seq1.augment_images(images)
    img2 = seq2.augment_images(images)
    return [img1, img2]

def flip(images):
    seq1 = iaa.Sequential([iaa.Fliplr(1.0)])
    seq2 = iaa.Sequential([iaa.Flipud(1.0)])

    img1 = seq1.augment_images(images)
    img2 = seq2.augment_images(images)
    return [img1, img2]

imgpath = 'C:\\Yolo_mark-master\\Yolo_mark-master\\x64\\Release\\data\\img'
photos = load_images_from_folder(imgpath)

#photoaug = augmentations1(photos)
#photoaug = rotate(photos)
photoaug = augResize(photos)
#photoaug = flip(photos)

write_images(photo_aug[0],iname, 50, wpath)
write_images(photo_aug[1],iname, 130,wpath)
#write_images(photo_aug[2],iname, 270,wpath)


